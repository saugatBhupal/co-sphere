// Mocks generated by Mockito 5.4.4 from annotations
// in cosphere/test/mockito_test/usecase_mockito_test/chat_usecases/get_conversation/get_conversation_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cosphere/src/core/error/failure.dart' as _i5;
import 'package:cosphere/src/features/chat/data/dto/send_message_request_dto.dart'
    as _i8;
import 'package:cosphere/src/features/chat/domain/entities/conversation.dart'
    as _i6;
import 'package:cosphere/src/features/chat/domain/entities/message.dart' as _i7;
import 'package:cosphere/src/features/chat/domain/repositories/chat_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i3.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>> getConversation(
          List<String>? members) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversation,
          [members],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>>.value(
                _FakeEither_0<_i5.Failure, _i6.Conversation>(
          this,
          Invocation.method(
            #getConversation,
            [members],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>>
      getAllConversations(String? uid) => (super.noSuchMethod(
            Invocation.method(
              #getAllConversations,
              [uid],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Conversation>>(
              this,
              Invocation.method(
                #getAllConversations,
                [uid],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Conversation>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>> getConversationById(
          String? conversationID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationById,
          [conversationID],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>>.value(
                _FakeEither_0<_i5.Failure, _i6.Conversation>(
          this,
          Invocation.method(
            #getConversationById,
            [conversationID],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Conversation>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>
      getMessagesFromConversation(String? conversationID) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMessagesFromConversation,
              [conversationID],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i7.Message>>(
              this,
              Invocation.method(
                #getMessagesFromConversation,
                [conversationID],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Message>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Message>> sendMessage(
          _i8.SendMessageRequestDto? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Message>>.value(
            _FakeEither_0<_i5.Failure, _i7.Message>(
          this,
          Invocation.method(
            #sendMessage,
            [message],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Message>>);
}
