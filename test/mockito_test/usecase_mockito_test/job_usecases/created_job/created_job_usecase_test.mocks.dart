// Mocks generated by Mockito 5.4.4 from annotations
// in cosphere/test/mockito_test/usecase_mockito_test/job_usecases/created_job/created_job_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cosphere/src/core/error/failure.dart' as _i5;
import 'package:cosphere/src/features/jobs/data/dto/apply_job/apply_job_req_dto.dart'
    as _i8;
import 'package:cosphere/src/features/jobs/data/dto/create_job/create_job_req_dto.dart'
    as _i7;
import 'package:cosphere/src/features/jobs/domain/entities/job.dart' as _i6;
import 'package:cosphere/src/features/jobs/domain/repositories/job_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [JobRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockJobRepository extends _i1.Mock implements _i3.JobRepository {
  MockJobRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>> getAppliedJobs(
          String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppliedJobs,
          [uid],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Job>>(
          this,
          Invocation.method(
            #getAppliedJobs,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Job>> createJob(
          _i7.CreateJobReqDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #createJob,
          [dto],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>.value(
            _FakeEither_0<_i5.Failure, _i6.Job>(
          this,
          Invocation.method(
            #createJob,
            [dto],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>> getExploreJobs(
          String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExploreJobs,
          [uid],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Job>>(
          this,
          Invocation.method(
            #getExploreJobs,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Job>> applyToJob(
          _i8.ApplyJobReqDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyToJob,
          [dto],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>.value(
            _FakeEither_0<_i5.Failure, _i6.Job>(
          this,
          Invocation.method(
            #applyToJob,
            [dto],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>> createdJobs(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #createdJobs,
          [uid],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Job>>(
          this,
          Invocation.method(
            #createdJobs,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Job>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Job>> getJobById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJobById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>.value(
            _FakeEither_0<_i5.Failure, _i6.Job>(
          this,
          Invocation.method(
            #getJobById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Job>>);
}
